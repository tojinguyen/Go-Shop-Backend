server {
    listen 80;
    server_name localhost;

    # Endpoint cho Prometheus Nginx Exporter
    location /stub_status {
        stub_status;
        allow 127.0.0.1; # Chỉ cho phép truy cập từ localhost (trong mạng Docker)
        allow all;       # Tạm thời cho phép tất cả để dễ debug, sau này có thể giới hạn lại
        deny all;
    }

    # Location đặc biệt để thực thi NJS
    location = /_auth_njs {
        internal;
        # Thực thi hàm verifyToken
        js_content auth.verifyToken;
        
        # Lấy giá trị từ headersOut của NJS và gán vào biến để proxy_set_header có thể sử dụng
        auth_request_set $request_user_id $upstream_http_x_user_id;
        auth_request_set $request_user_role $upstream_http_x_user_role;
        auth_request_set $request_user_email $upstream_http_x_user_email;
    }

    # User Service routes
    location /api/v1/users {
        auth_request /_auth_njs;

        proxy_set_header X-User-ID $request_user_id;
        proxy_set_header X-User-Role $request_user_role;
        proxy_set_header X-User-Email $request_user_email;

        proxy_pass http://user-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Shop Service routes
    location /api/v1/shops {
        auth_request /_auth_njs;

        proxy_set_header X-User-ID $request_user_id;
        proxy_set_header X-User-Role $request_user_role;
        proxy_set_header X-User-Email $request_user_email;

        proxy_pass http://shop-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Default route
    location / {
        return 404 "Endpoint not found";
    }


    # Public Routes ============================================================
    # Auth routes
    location /api/v1/auth {
        proxy_pass http://user-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
