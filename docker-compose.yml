version: '3.8'

services:
  # API Gateway
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-go-shop}-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      - user-service
      - shop-service
    networks:
      - go-shop-network
    restart: unless-stopped
    volumes:
      - ./nginx/logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Infrastructure services
  redis-cache:
    image: ${REDIS_IMAGE:-redis:7-alpine}
    container_name: ${PROJECT_NAME:-go-shop}-redis-cache
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env
    volumes:
      - ${REDIS_VOLUME_NAME:-redis_data}:/data
    networks:
      - go-shop-network
    restart: unless-stopped

############## User Service Section ##############
  # User Service
  user-service:
    build:
      context: .
      dockerfile: ./internal/services/user-service/Dockerfile
    container_name: ${PROJECT_NAME:-go-shop}-user-service
    ports:
      - "${USER_SERVICE_SERVICE_PORT:-8080}:8080"
    env_file:
      - .env
    depends_on:
      postgres-user-service:
        condition: service_healthy
      redis-cache:
        condition: service_started
    networks:
      - go-shop-network
    restart: unless-stopped

  # PostgreSQL Database User Service
  postgres-user-service:
    image: postgres:15
    container_name: postgres-user-service
    ports:
      - "${USER_SERVICE_POSTGRES_PORT:-6000}:5432"
    environment: 
      POSTGRES_USER: ${USER_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${USER_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${USER_SERVICE_POSTGRES_DB}
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    networks:
      - go-shop-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

############### Shop Service Section ##############
  # Shop Service
  shop-service:
    build:
      context: .
      dockerfile: ./internal/services/shop-service/Dockerfile
    container_name: ${PROJECT_NAME:-go-shop}-shop-service
    ports:
      - "${SHOP_SERVICE_SERVICE_PORT:-8081}:8081"
    env_file:
      - .env
    depends_on:
      postgres-shop-service:
        condition: service_healthy
      redis-cache:
        condition: service_started
    networks:
      - go-shop-network
    restart: unless-stopped

  # PostgreSQL Database User Service
  postgres-shop-service:
    image: postgres:15
    container_name: postgres-shop-service
    ports:
      - "${SHOP_SERVICE_POSTGRES_PORT:-6001}:5432"
    environment: 
      POSTGRES_USER: ${SHOP_SERVICE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${SHOP_SERVICE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${SHOP_SERVICE_POSTGRES_DB}
    volumes:
      - shop_postgres_data:/var/lib/postgresql/data
    networks:
      - go-shop-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

volumes:
  shop_postgres_data:
  user_postgres_data:
  redis_data:
  db_data:

networks:
  go-shop-network:
    driver: bridge