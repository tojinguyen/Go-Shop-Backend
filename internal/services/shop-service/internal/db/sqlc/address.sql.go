// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: address.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createShopAddress = `-- name: CreateShopAddress :one
INSERT INTO addresses (
  id,
  shop_id,
  street,
  ward,
  district,
  city,
  country,
  lat,
  long
) VALUES (
  $1, $2, $3, $4, $5, $6, $7, $8, $9
)
RETURNING id
`

type CreateShopAddressParams struct {
	ID       pgtype.UUID   `json:"id"`
	ShopID   pgtype.UUID   `json:"shop_id"`
	Street   string        `json:"street"`
	Ward     pgtype.Text   `json:"ward"`
	District pgtype.Text   `json:"district"`
	City     pgtype.Text   `json:"city"`
	Country  pgtype.Text   `json:"country"`
	Lat      pgtype.Float8 `json:"lat"`
	Long     pgtype.Float8 `json:"long"`
}

func (q *Queries) CreateShopAddress(ctx context.Context, arg CreateShopAddressParams) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, createShopAddress,
		arg.ID,
		arg.ShopID,
		arg.Street,
		arg.Ward,
		arg.District,
		arg.City,
		arg.Country,
		arg.Lat,
		arg.Long,
	)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}
