{
  "swagger": "2.0",
  "info": {
    "description": "User management service for Go-Shop application",
    "title": "User Service API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "API Support",
      "url": "http://www.swagger.io/support",
      "email": "support@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "localhost:8081",
  "basePath": "/api/v1",
  "paths": {
    "/auth/login": {
      "post": {
        "description": "Authenticate user with email and password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "User login",
        "parameters": [
          {
            "description": "User login request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_toji-dev_go-shop_internal_services_user-service_internal_dto.LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Register a new user with email and password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "Register a new user",
        "parameters": [
          {
            "description": "User registration request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_toji-dev_go-shop_internal_services_user-service_internal_dto.RegisterRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "409": {
            "description": "Email already exists",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    }
  },
  "definitions": {
    "github_com_toji-dev_go-shop_internal_services_user-service_internal_dto.LoginRequest": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "minLength": 8
        }
      }
    },
    "github_com_toji-dev_go-shop_internal_services_user-service_internal_dto.RegisterRequest": {
      "type": "object",
      "required": ["confirm_password", "email", "password"],
      "properties": {
        "confirm_password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "minLength": 8
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "description": "Description for what is this security definition being used",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
