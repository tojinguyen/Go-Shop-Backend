// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user_account.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUserAccount = `-- name: CreateUserAccount :one
INSERT INTO user_accounts (
  email, hashed_password
) VALUES (
  $1, $2
) RETURNING id, email, created_at, updated_at
`

type CreateUserAccountParams struct {
	Email          string `json:"email"`
	HashedPassword string `json:"hashed_password"`
}

type CreateUserAccountRow struct {
	ID        pgtype.UUID        `json:"id"`
	Email     string             `json:"email"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

func (q *Queries) CreateUserAccount(ctx context.Context, arg CreateUserAccountParams) (CreateUserAccountRow, error) {
	row := q.db.QueryRow(ctx, createUserAccount, arg.Email, arg.HashedPassword)
	var i CreateUserAccountRow
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
